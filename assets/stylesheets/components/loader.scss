/* Loading effect css courtesy of https://ihatetomatoes.net/create-css3-spinning-preloader/, adapted into scss */

//The wrapper to take up the whole viewport, so the width and height are set to 100%
#loader-wrapper {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: $baseLoadZIndex;
    #loader {
        //These declarations, including :before and :after, generate 3 circles that envelop each other. All but the top sides of the circles are then set to transparent so that when the spin animation is applied it gives the effect of lines going around in a circle
        @include loaderBorder(relative, $loaderTopPosition, 0, 0, 50%);
        @include animation(spin, 2s);
        display: block;
        width: 150px;
        height: 150px;
        margin: -75px 0 0 -75px;
        z-index: $baseLoadZIndex + 500;
        &:before {
            @include loaderBorder(absolute, 5px, 5px, 5px, 5px);
            @include animation(spin, 3s);
        }
        &:after {
            @include loaderBorder(absolute, 15px, 15px, 15px, 15px);
            @include animation(spin, 1.5s);
        }
    }
    p {
        color: white;
        z-index: $baseLoadZIndex + 1000;
        display: block;
        position: relative;
        top: $loaderTopPosition;
        text-align: center;
        font-size: 2rem;
    }
    .loader-section {
        position: fixed;
        top: 0;
        width: 100%;
        height: 100%;
        background: #9bcd64;
        z-index: $baseLoadZIndex - 1;
    }
}

/* The various vendor prefixes have been included in a mixin for conciseness */
@include keyframes(spin) {
    0%   {
        @include transform(rotate(0deg));
    }
    100% {
        @include transform(rotate(360deg));
    }
}

/* These styles only take effect when .loaded has been applied to the body via jQuery */
.loaded {
    #loader-wrapper {
        /* Fade the loading wrapper out */
        @include transition(all, 0.5s, linear);
        opacity: 0;
        visibility: hidden;
    }
}